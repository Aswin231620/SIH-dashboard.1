import React from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Bell, AlertTriangle, Clock, ChevronRight } from "lucide-react";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";

export default function QuickAlertsCard({ alerts }) {
  const getSeverityColor = (severity) => {
    switch (severity) {
      case 'critical':
        return 'bg-red-100 text-red-800 border-red-200';
      case 'high':
        return 'bg-orange-100 text-orange-800 border-orange-200';
      case 'medium':
        return 'bg-amber-100 text-amber-800 border-amber-200';
      default:
        return 'bg-blue-100 text-blue-800 border-blue-200';
    }
  };

  const getAlertIcon = (type) => {
    switch (type) {
      case 'disease_outbreak':
        return 'ðŸ¦ ';
      case 'biosecurity_breach':
        return 'ðŸš¨';
      case 'vaccination_overdue':
        return 'ðŸ’‰';
      case 'training_reminder':
        return 'ðŸ“š';
      default:
        return 'ðŸ“¢';
    }
  };

  const recentAlerts = alerts.slice(0, 3);
  const unreadCount = alerts.filter(a => !a.read).length;

  return (
    <motion.div
      initial={{ opacity: 0, scale: 0.95 }}
      animate={{ opacity: 1, scale: 1 }}
      transition={{ delay: 0.3 }}
    >
      <Card className="relative overflow-hidden hover:shadow-lg transition-all duration-300">
        <div className="absolute top-0 right-0 w-24 h-24 transform translate-x-6 -translate-y-6 bg-amber-500 rounded-full opacity-10" />
        
        <CardHeader className="pb-3">
          <CardTitle className="flex items-center justify-between">
            <div className="flex items-center gap-2">
              <div className="p-2 rounded-lg bg-amber-50 relative">
                <Bell className="w-5 h-5 text-amber-600" />
                {unreadCount > 0 && (
                  <div className="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full"></div>
                )}
              </div>
              <span className="text-lg font-bold text-gray-900">Quick Alerts</span>
            </div>
            <Badge variant="outline" className="bg-amber-50 text-amber-700 border-amber-200">
              {unreadCount} new
            </Badge>
          </CardTitle>
        </CardHeader>
        
        <CardContent>
          <div className="space-y-3">
            {recentAlerts.length > 0 ? (
              recentAlerts.map((alert) => (
                <div
                  key={alert.id}
                  className="flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors cursor-pointer"
                >
                  <div className="flex items-center gap-3">
                    <span className="text-lg">{getAlertIcon(alert.alert_type)}</span>
                    <div className="flex-1">
                      <p className="font-medium text-sm text-gray-900 truncate">
                        {alert.title}
                      </p>
                      <p className="text-xs text-gray-500 truncate">
                        {alert.message}
                      </p>
                      <div className="flex items-center gap-2 mt-1">
                        <Clock className="w-3 h-3 text-gray-400" />
                        <span className="text-xs text-gray-400">
                          {new Date(alert.created_date).toLocaleDateString()}
                        </span>
                      </div>
                    </div>
                  </div>
                  <div className="flex items-center gap-2">
                    <Badge className={getSeverityColor(alert.severity)}>
                      {alert.severity}
                    </Badge>
                    <ChevronRight className="w-4 h-4 text-gray-400" />
                  </div>
                </div>
              ))
            ) : (
              <div className="text-center py-6">
                <Bell className="w-8 h-8 text-gray-300 mx-auto mb-2" />
                <p className="text-sm text-gray-500">No recent alerts</p>
              </div>
            )}

            <Link to={createPageUrl("Alerts")}>
              <Button variant="outline" className="w-full mt-3 hover:bg-amber-50 hover:border-amber-300">
                View All Alerts
                <ChevronRight className="w-4 h-4 ml-2" />
              </Button>
            </Link>
          </div>
        </CardContent>
      </Card>
    </motion.div>
  );
}
